@model Model.Test
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("", "", FormMethod.Get, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="customValidation">
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            Test Creation
        </div>
        <div class="panel-body">
            <form class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.TestName, new { @class = "control-label col-md-3" })
                    <div class="col-sm-7">
                        @Html.TextBoxFor(model => model.TestName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TestName)
                    </div>
                </div>

                <div class="form-group"></div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TID, new { @class = "control-label col-md-3 red" })
                    <div class="col-sm-7">
                        @Html.TextBoxFor(model => model.TID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TID)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TestDescription, new { @class = "control-label col-md-3 red" })
                    <div class="col-sm-7">
                        @Html.TextAreaFor(model => model.TestDescription, new { rows = "6", cols = "50", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TestDescription)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NumberOfParametersRequired, new { @class = "control-label col-md-3 red" })
                    <div class="col-sm-7">
                        @Html.DropDownListFor(model => model.NumberOfParametersRequired, Enumerable.Range(1, (int)@ViewBag.MaxNoOfTestParameter).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString(), Selected = (i == (int)@ViewBag.NumberOfParametersRequired) }), new { @class = "dropdown-medium form-control" })
                        @Html.ValidationMessageFor(model => model.NumberOfParametersRequired)
                    </div>
                </div>

                <div class="table-responsive" style="float:left;" id="view">
                    @Html.Partial("~/Views/PartialView/testParameter.cshtml")
                </div>

                <div class="form-group">
                    <div class="col-sm-12 text-center">
                        <button id="btnCreateTest" type="button" class="btn btn-default" value="Create">Create</button>
                        <button id="btnResetTest" type="button" class="btn btn-default" value="Reset">Reset</button>
                    </div>
                </div>

            </form>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        /* This is change event for your dropdownlist */
        $(document).ready(function () {
            $('#NumberOfParametersRequired').change(function () {
                CreateTestParameterView($(this).val());
            });

            function CreateTestParameterView(id) {
                /* Request the partial view with .get request. */
                $.get('/Test/Renderview/' + id, function (data) {
                    /* data is the pure html returned from action method, load it to your page */
                    $('#view').html(data);
                    /* little fade in effect */
                    $('#view').fadeIn('fast');
                });
            }

            $("#btnResetTest").click(function () {
                $('input[type="text"]').val('');
                $("textarea").val("");
                $(".validation-summary-errors").css("display", "none");
                $(".input-validation-error").removeClass("input-validation-error");
                $("#resultMessage").removeClass("label-success").removeClass("label-warning").text('').hide();
                $(".field-validation-error").children().remove();
                $("#NumberOfParametersRequired").val('@ViewBag.NumberOfParametersRequired');
                $(".fieldType").val('0')
                CreateTestParameterView('@ViewBag.NumberOfParametersRequired');
            });

            $("#btnCreateTest").click(function () {
                if (validate()) {
                    var test = {};
                    test.TestName = $("#TestName").val();
                    test.TID = $("#TID").val();
                    test.TestDescription = $("#TestDescription").val();
                    test.NumberOfParametersRequired = $("#NumberOfParametersRequired").val();
                    test.TestParameters = [];
                    for (var i = 0; i < test.NumberOfParametersRequired; i++) {
                        var testparameter = {
                            Caption: $("#TestParameters_" + i + "__Caption").val(),
                            TPID: $("#TestParameters_" + i + "__TPID").val(),
                            Description: $("#TestParameters_" + i + "__Description").val(),
                            FieldTypeID: $("#TestParameters_" + i + "__FieldTypeID").val()
                        }
                        test.TestParameters.push(testparameter);
                    }

                    $.ajax({
                        url: '/Test/Create',
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(test),
                        async: true,
                        processData: false,
                        cache: false,
                        success: function (data) {
                            if (data.errorMessage.length > 0) {
                                var html = '<div class="validation-summary-errors"><ul>';
                                $.each(data.errorMessage, function (key, Value) {
                                    html += '<li>' + Value + '</li>';
                                });
                                html += '</ul></div>';
                                $("#customValidation").html(html);
                            }
                            else {
                                CreateTestParameterView('@ViewBag.NumberOfParametersRequired');
                                $("#NumberOfParametersRequired").val('@ViewBag.NumberOfParametersRequired');
                                $('input[type="text"]').val('');
                                $("textarea").val("");
                                $("#resultMessage").addClass("label-success").show().text('Record inserted successfully');
                            }
                        },
                        error: function (xhr) {
                            if (xhr.status == 200) {
                                CreateTestParameterView('@ViewBag.NumberOfParametersRequired');
                                $("#NumberOfParametersRequired").val('@ViewBag.NumberOfParametersRequired');
                                $('input[type="text"]').val('');
                                $("textarea").val("");
                                $("#resultMessage").addClass("label-success").show().text('Record inserted successfully ');
                            }
                            else {
                                $("#resultMessage").addClass("label-warning").show().text('Error occured ');
                            }
                        }
                    })
                }

            });

        });
    </script>
}
